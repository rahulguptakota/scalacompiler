
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'R_PRIVATE R_FORSOME R_ARRAY R_VAL R_THROW R_TO R_EXTENDS R_SEALED R_VAR R_BYTE R_FINAL R_MATCH R_ATTHERATE R_RETURN R_IMPLIES1 R_ELSE R_BREAK R_OVERRIDE R_IMPORT R_CATCH R_WITH R_INSTANCEOF R_INT R_UNTIL R_DEFAULT R_WHILE R_CONTINUE R_ANYREF R_ANY R_DEF R_FALSE R_ABSTRACT R_LONG R_NULL R_IF R_LEFTARROW1 R_STRING R_FOR R_CASE R_NEW R_LAZY R_SHORT R_DOUBLE R_CLASS R_OBJECT R_LIST R_SUPER R_IMPLICIT R_PACKAGE R_FLOAT R_CHAR R_BOOLEAN R_UNIT INT FLOAT STRING CHAR BOOL LPARAN RPARAN LSQRB RSQRB BLOCKOPEN BLOCKCLOSE GT GE LT LE NONZERODIGIT ID BITAND BITOR BITXOR BITNEG BITLSHIFT BITRSHIFT BITRSFILL EQUALASS ADDASS SUBASS MULASS MODASS DIVASS BITLEFTASS BITRIGHTASS BITANDASS BITORASS BITXORASS PLUS MINUS MULTIPLICATION DIVISION MODULUS EQUAL NOTEQUAL OR NOT ENDQUOTE DOT SEMICOLON COMMA BACKSPACE HORITAB LINEFEED FORMFEED CARRIAGERETN DOUBLEQUOTE SINGLEQUOTE BACKSLASH COLON COMMENT COLOR BITRSFILLASS HEXDIGIT ZERO X_SMALL X_BIGCompilationUnit : ImportDeclarationss ClassObjectsListImportDeclarationss : ImportDeclarations\n\t\t\t\t\t\t\t| empty\tImportDeclarations : ImportDeclaration \n\t\t\t\t\t\t\t| ImportDeclarations ImportDeclarationImportDeclaration : R_IMPORT AmbiguousNameClassObjectsList : ClassObjectsList ClassAndObjectDeclaration\n\t\t\t\t\t\t| ClassAndObjectDeclarationClassAndObjectDeclaration : ObjectDeclaration\n\t\t\t\t\t\t\t\t| ClassDeclarationObjectDeclaration :  R_OBJECT ID Super BlockClassDeclaration :  R_CLASS ID ClassHeader Super BLOCKOPEN ClassBodyDeclarations BLOCKCLOSE\n\t\t\t\t\t | R_CLASS ID ClassHeader Super BLOCKOPEN  BLOCKCLOSESuper : R_EXTENDS ClassType\n\t\t\t| emptyClassHeader : LPARAN FormalParameterLists RPARANFormalParameterLists : FormalParameterList\n\t\t\t\t\t\t\t| emptyClassBodyDeclarations : ClassBodyDeclaration\n\t\t\t\t\t\t\t | ClassBodyDeclarations ClassBodyDeclarationClassBodyDeclaration : FieldDeclaration\n\t\t\t\t\t\t\t| MethodDeclarationFormalParameterList : ID COLON Type \n\t\t\t\t\t\t\t| ID COLON Type COMMA FormalParameterListFieldDeclaration : R_VAL VariableDeclarator1 EndStatement\n\t\t\t\t\t\t|  R_VAR VariableDeclarator1 EndStatement VariableDeclarator1 : ID COLON Type EQUALASS VariableInitializer\n\t\t\t\t\t\t\t| ID EQUALASS VariableInitializer FuncArgumentListExtras : VariableDeclarators\n\t\t\t\t\t\t\t\t| emptyVariableDeclarators : VariableDeclarator\n\t\t\t\t\t\t| VariableDeclarator COMMA VariableDeclaratorsVariableDeclarator : ID COLON Type VariableInitializer : ArrayInitializer\n\t\t\t\t\t\t\t| Expression\n\t\t\t\t\t\t\t| ClassInstanceCreationExpression ArrayInitializer : R_NEW R_ARRAY LSQRB Type RSQRB LPARAN INT RPARAN\n\t\t\t\t\t\t\t| R_ARRAY LPARAN ArgumentLists RPARANMethodDeclaration : MethodHeader MethodBodyMethodHeader : R_DEF MethodDeclarator MethodReturnTypeExtrasMethodDeclarator : ID LPARAN FuncArgumentListExtras RPARANMethodReturnTypeExtras : COLON MethodReturnType EQUALASS\n\t\t\t\t\t\t\t\t| EQUALASS\n\t\t\t\t\t\t\t\t| empty MethodReturnType : Type \n\t\t\t\t\t\t| R_UNITMethodBody : BlockType : PrimitiveType \n\t\t| ReferenceTypePrimitiveType : NumericType \n\t\t\t\t\t| R_BOOLEANNumericType : IntegralType\n\t\t\t\t| FloatingPointTypeIntegralType : R_BYTE\n\t\t\t\t | R_SHORT\n\t\t\t\t | R_INT\n\t\t\t\t | R_LONG \n\t\t\t\t | R_CHARFloatingPointType : R_FLOAT \n\t\t\t\t\t\t| R_DOUBLEReferenceType : ID\n\t\t\t\t\t| ArrayTypeClassType : ID\n\t\t\t\t |\tR_WITH ClassTypeArrayType : R_ARRAY LSQRB RSQRB\n\t\t\t\t| R_LIST LSQRB RSQRBBlock : BLOCKOPEN BLOCKCLOSE\n\t\t\t| BLOCKOPEN BlockStatements BLOCKCLOSEBlockStatements : BlockStatement \n\t\t\t\t\t| BlockStatements BlockStatementBlockStatement : LocalVariableDeclarationStatement \n\t\t\t\t\t| Statement\n\t\t\t\t\t| MethodDeclarationLocalVariableDeclarationStatement : LocalVariableDeclaration EndStatementLocalVariableDeclaration : R_VAL VariableDeclarationBody\n\t\t\t\t\t\t\t\t| R_VAR VariableDeclarationBodyVariableDeclarationBody : ID COLON Type EQUALASS VariableInitializer\n\t\t| ID EQUALASS VariableInitializerStatement : StatementWithoutTrailingSubstatement\n\t\t\t\t| IfThenStatement\n\t\t\t\t| IfThenElseStatement\n\t\t\t\t| WhileStatement\n\t\t\t\t| ForStatementStatementWithoutTrailingSubstatement : Block\n\t\t\t\t\t\t\t\t\t\t| EmptyStatement\n\t\t\t\t\t\t\t\t\t\t| ExpressionStatement\n\t\t\t\t\t\t\t\t\t\t| SwitchStatement\n\t\t\t\t\t\t\t\t\t\t| BreakStatement\n\t\t\t\t\t\t\t\t\t\t| ContinueStatement\n\t\t\t\t\t\t\t\t\t\t| ReturnStatementStatementNoShortIf : StatementWithoutTrailingSubstatement\n\t\t\t\t\t\t| IfThenElseStatementNoShortIfEmptyStatement : EndStatementExpressionStatement : StatementExpression EndStatementStatementExpression : Assignment\n\t\t\t\t\t\t| MethodInvocation\n\t\t\t\t\t\t| ClassInstanceCreationExpressionIfThenStatement : R_IF LPARAN Expression RPARAN StatementIfThenElseStatement : R_IF LPARAN Expression RPARAN StatementNoShortIf R_ELSE StatementIfThenElseStatementNoShortIf : R_IF LPARAN Expression RPARAN StatementNoShortIf R_ELSE StatementNoShortIfSwitchStatement :  Expression  R_MATCH SwitchBlockSwitchBlock : BLOCKOPEN SwitchBlockStatementGroups SwitchLabels BLOCKCLOSE\n\t\t\t\t| BLOCKOPEN  SwitchLabels BLOCKCLOSE\n\t\t\t\t| BLOCKOPEN SwitchBlockStatementGroups  BLOCKCLOSE\n\t\t\t\t| BLOCKOPEN   BLOCKCLOSESwitchBlockStatementGroups : SwitchBlockStatementGroup\n\t\t\t\t\t\t\t\t\t | SwitchBlockStatementGroups SwitchBlockStatementGroupSwitchBlockStatementGroup : SwitchLabels BlockStatementsSwitchLabels : SwitchLabel \n\t\t\t\t\t| SwitchLabels SwitchLabelSwitchLabel : R_CASE Expression COLON \n\t\t\t\t| R_DEFAULT COLONWhileStatement :  R_WHILE  LPARAN Expression RPARAN StatementForStatement : R_FOR LPARAN ForExprs RPARAN StatementForExprs :  ForVariables EndStatement ForExprs \n\t\t\t| ForVariablesForVariables : DeclarationKeywordExtras ID R_LEFTARROW1 Expression ForUntilTo ExpressionDeclarationKeywordExtras : VariableHeader \n\t\t\t\t\t\t\t\t| emptyVariableHeader : R_VAL\n\t\t\t\t\t| R_VARForUntilTo : R_UNTIL \n\t\t\t\t| R_TOBreakStatement : R_BREAK ID EndStatement\n\t\t\t\t\t| R_BREAK EndStatementContinueStatement : R_CONTINUE ID EndStatement\n\t\t\t\t\t\t| R_CONTINUE  EndStatementReturnStatement : R_RETURN Expression EndStatement\n\t\t\t\t\t| R_RETURN EndStatementExpression : Assignment\n\t\t\t\t\t| OrExpressionLeftHandSide : AmbiguousName\n\t\t\t\t| ArrayAccessAssignmentOperator : EQUALASS \n\t\t\t\t\t\t| MULASS\n\t\t\t\t\t\t| DIVASS\n\t\t\t\t\t\t| MODASS \n\t\t\t\t\t\t| ADDASS\n\t\t\t\t\t\t| SUBASS\n\t\t\t\t\t\t| BITLEFTASS\n\t\t\t\t\t\t| BITRIGHTASS\n\t\t\t\t\t\t| BITRSFILLASS \n\t\t\t\t\t\t| BITANDASS \n\t\t\t\t\t\t| BITXORASS \n\t\t\t\t\t\t| BITORASSAssignment : LeftHandSide AssignmentOperator OrExpressionOrExpression : AndExpression\n\t\t\t\t  | AndExpression OR OrExpressionAndExpression : XorExpression \n\t\t\t\t\t| AndExpression BITAND XorExpressionXorExpression : EqualityExpression\n\t\t\t\t\t| XorExpression BITXOR EqualityExpressionEqualityExpression : RelationalExpression\n\t\t\t\t\t\t | EqualityExpression EQUAL RelationalExpression\n\t\t\t\t\t\t| EqualityExpression NOTEQUAL RelationalExpressionRelationalExpression : ShiftExpression \n\t\t\t\t\t\t| RelationalExpression LT ShiftExpression \n\t\t\t\t\t\t| RelationalExpression GT ShiftExpression  \n\t\t\t\t\t\t| RelationalExpression LE ShiftExpression  \n\t\t\t\t\t\t| RelationalExpression GE ShiftExpression  \n\t\t\t\t\t\t| RelationalExpression R_INSTANCEOF ReferenceTypeShiftExpression : AdditiveExpression \n\t\t\t\t\t| ShiftExpression BITLSHIFT AdditiveExpression \n\t\t\t\t\t| ShiftExpression BITRSHIFT AdditiveExpression \n\t\t\t\t\t| ShiftExpression BITRSFILL AdditiveExpressionAdditiveExpression : MultiplicativeExpression\n\t\t\t\t\t\t\t| AdditiveExpression PLUS MultiplicativeExpression\n\t\t\t\t\t\t\t| AdditiveExpression MINUS MultiplicativeExpressionMultiplicativeExpression : UnaryExpression\n\t\t\t\t\t\t\t\t| MultiplicativeExpression MULTIPLICATION UnaryExpression\n\t\t\t\t\t\t\t\t| MultiplicativeExpression DIVISION UnaryExpression\n\t\t\t\t\t\t\t\t| MultiplicativeExpression MODULUS UnaryExpressionUnaryExpression :  PLUS UnaryExpression\n\t\t\t\t\t\t| MINUS UnaryExpression\n\t\t\t\t\t\t| UnaryExpressionNotPlusMinusUnaryExpressionNotPlusMinus : PostfixExpression\n\t\t\t\t\t\t\t\t\t| NOT UnaryExpressionPostfixExpression : Primary\n\t\t\t\t\t\t\t| AmbiguousNameMethodInvocation : AmbiguousName LPARAN ArgumentLists RPARANArgumentLists : ArgumentList\n\t\t\t\t\t\t| emptyPrimary : PrimaryNoNewArrayPrimaryNoNewArray : Literal\n\t\t\t\t\t\t| LPARAN Expression RPARAN\n\t\t\t\t\t\t| MethodInvocation\n\t\t\t\t\t\t| ArrayAccessClassInstanceCreationExpression : R_NEW ID LPARAN ArgumentLists RPARANArgumentList : Expression\n\t\t\t\t\t| ArgumentList COMMA ExpressionArrayAccess : AmbiguousName LSQRB Expression RSQRBAmbiguousName : ID \n\t\t\t\t\t| AmbiguousName DOT IDLiteral : IntegerLiteral\n\t\t\t\t| FloatingPointLiteral\n\t\t\t\t| BooleanLiteral\n\t\t\t\t| CharacterLiteral\n\t\t\t\t| StringLiteral\n\t\t\t\t| NullLiteralBooleanLiteral : BOOLIntegerLiteral : INTFloatingPointLiteral : FLOATCharacterLiteral : CHARStringLiteral : STRINGNullLiteral : R_NULLEndStatement : SEMICOLON \n\t\t\t\t\t| LINEFEEDempty :'
    
_lr_action_items = {'NOTEQUAL':([15,25,52,56,57,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,121,124,141,142,143,144,145,157,166,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,252,256,257,280,281,],[-192,-193,-183,-176,149,-166,-175,-199,-186,-187,-201,-178,-153,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,149,-65,-66,-180,-191,]),'R_LEFTARROW1':([284,],[311,]),'R_RETURN':([34,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,222,243,247,254,277,278,282,286,288,291,302,303,307,309,312,314,315,316,317,318,327,330,331,335,341,346,],[108,-86,-72,-69,-71,108,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,-124,-101,-126,-128,108,108,108,-109,108,-105,-113,-98,-79,-114,108,-104,-112,108,-103,-110,108,-102,-111,-99,108,108,]),'R_VAR':([34,38,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,129,130,132,133,146,147,155,170,174,175,177,196,197,199,203,222,243,247,254,260,261,283,286,288,291,302,303,307,309,312,314,315,316,317,318,330,331,335,],[40,131,-86,-72,-69,-71,40,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,131,-22,-21,-19,-70,-68,-125,239,-74,-94,-127,-39,-47,-129,-20,-124,-101,-126,-128,-26,-25,239,-109,40,-105,-113,-98,-79,-114,40,-104,-112,40,-103,-110,-102,-111,-99,]),'BITRSFILL':([15,25,52,56,58,63,65,66,68,72,73,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,141,142,143,144,145,157,166,214,215,216,223,225,226,228,229,245,246,249,250,251,280,281,],[-192,-193,-183,-176,-166,-175,-199,-186,-187,-201,-178,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,192,-204,-205,-179,-186,-187,-174,-173,-179,-177,-170,-172,-171,-185,192,192,192,192,-167,-168,-164,-165,-163,-180,-191,]),'R_WITH':([23,31,],[31,31,]),'EQUAL':([15,25,52,56,57,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,121,124,141,142,143,144,145,157,166,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,252,256,257,280,281,],[-192,-193,-183,-176,148,-166,-175,-199,-186,-187,-201,-178,-153,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,148,-65,-66,-180,-191,]),'R_INSTANCEOF':([15,25,52,56,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,121,124,141,142,143,144,145,157,166,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,256,257,280,281,],[-192,-193,-183,-176,-166,-175,-199,-186,-187,-201,-178,163,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,163,163,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,-65,-66,-180,-191,]),'CHAR':([34,41,42,45,47,48,49,50,51,53,54,55,61,62,67,69,70,75,80,82,83,84,85,95,108,109,110,138,139,146,147,148,149,150,151,152,155,160,161,162,164,165,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,222,243,247,253,254,258,277,278,279,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,346,],[76,-86,-72,76,76,-69,-71,76,-67,-85,-90,-93,-88,-80,-81,-84,76,76,-83,-206,-89,-87,-73,-82,76,-207,-79,76,76,-70,-68,76,76,76,76,76,-125,76,76,76,76,76,76,76,76,76,76,-74,-94,-127,-141,-137,76,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,76,76,76,76,-39,-47,-129,76,-124,-101,-126,76,-128,76,76,76,76,76,-109,76,76,-105,76,76,-113,-98,-79,-114,76,76,-104,-112,76,-103,-110,76,76,76,-102,-111,-99,-123,-122,76,76,76,]),'R_FOR':([34,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,222,243,247,254,277,278,282,286,288,291,302,303,307,309,312,314,315,316,317,318,327,330,331,335,341,346,],[86,-86,-72,-69,-71,86,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,-124,-101,-126,-128,86,86,86,-109,86,-105,-113,-98,-79,-114,86,-104,-112,86,-103,-110,86,-102,-111,-99,86,86,]),'R_MATCH':([15,25,43,46,52,56,57,58,63,64,65,66,68,72,73,74,76,77,81,87,88,89,90,91,92,94,96,97,98,102,103,104,107,121,124,141,142,143,144,145,166,210,211,212,213,214,215,216,223,225,226,227,228,229,245,246,248,249,250,251,252,256,257,280,281,],[-192,-193,-147,-130,-183,-176,-151,-166,-175,-131,-199,-186,-187,-201,-178,-153,-203,-184,-179,-195,-197,-196,171,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-62,-61,-179,-186,-187,-174,-173,-177,-150,-148,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-146,-164,-165,-163,-152,-65,-66,-180,-191,]),'R_IF':([34,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,222,243,247,254,277,278,282,286,288,291,302,303,307,309,312,314,315,316,317,318,327,330,331,335,341,346,],[78,-86,-72,-69,-71,78,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,-124,-101,-126,-128,78,305,78,-109,78,-105,-113,-98,-79,-114,78,-104,-112,78,-103,-110,78,-102,-111,-99,305,305,]),'BITXOR':([15,25,52,56,57,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,103,104,107,121,124,141,142,143,144,145,157,166,210,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,252,256,257,280,281,],[-192,-193,-183,-176,-151,-166,-175,-199,-186,-187,-201,-178,-153,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,194,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,194,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,-152,-65,-66,-180,-191,]),'BITLEFTASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,186,-132,-191,]),'MULTIPLICATION':([15,25,52,56,58,63,65,66,68,72,73,76,77,81,87,88,89,91,94,96,97,98,104,107,141,142,143,144,145,157,166,214,215,216,223,245,246,280,281,],[-192,-193,-183,-176,150,-175,-199,-186,-187,-201,-178,-203,-184,-179,-195,-197,-196,-194,-169,-198,-200,-202,-204,-205,-179,-186,-187,-174,-173,-179,-177,-170,-172,-171,-185,150,150,-180,-191,]),'R_INT':([37,209,218,259,300,323,],[114,114,114,114,114,114,]),'ADDASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,187,-132,-191,]),'R_VAL':([34,38,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,129,130,132,133,146,147,155,170,174,175,177,196,197,199,203,222,243,247,254,260,261,283,286,288,291,302,303,307,309,312,314,315,316,317,318,330,331,335,],[44,134,-86,-72,-69,-71,44,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,134,-22,-21,-19,-70,-68,-125,242,-74,-94,-127,-39,-47,-129,-20,-124,-101,-126,-128,-26,-25,242,-109,44,-105,-113,-98,-79,-114,44,-104,-112,44,-103,-110,-102,-111,-99,]),'MINUS':([15,25,34,41,42,45,47,48,49,50,51,52,53,54,55,56,58,61,62,63,65,66,67,68,69,70,72,73,75,76,77,80,81,82,83,84,85,87,88,89,91,92,94,95,96,97,98,104,107,108,109,110,138,139,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,161,162,164,165,166,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,214,215,216,222,223,243,245,246,247,249,250,251,253,254,258,277,278,279,280,281,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,346,],[-192,-193,45,-86,-72,45,45,-69,-71,45,-67,-183,-85,-90,-93,-176,-166,-88,-80,-175,-199,-186,-81,-187,-84,45,-201,-178,45,-203,-184,-83,-179,-206,-89,-87,-73,-195,-197,-196,-194,173,-169,-82,-198,-200,-202,-204,-205,45,-207,-79,45,45,-179,-186,-187,-174,-173,-70,-68,45,45,45,45,45,-125,-179,45,45,45,45,45,-177,45,45,45,45,45,-74,-94,-127,-141,-137,45,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,45,45,45,45,-39,-47,-129,45,-170,-172,-171,-124,-185,-101,-167,-168,-126,173,173,173,45,-128,45,45,45,45,-180,-191,45,-109,45,45,-105,45,45,-113,-98,-79,-114,45,45,-104,-112,45,-103,-110,45,45,45,-102,-111,-99,-123,-122,45,45,45,]),'DOT':([14,15,25,81,141,157,],[19,-192,-193,19,19,19,]),'R_BYTE':([37,209,218,259,300,323,],[119,119,119,119,119,119,]),'R_BREAK':([34,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,222,243,247,254,277,278,282,286,288,291,302,303,307,309,312,314,315,316,317,318,327,330,331,335,341,346,],[60,-86,-72,-69,-71,60,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,-124,-101,-126,-128,60,60,60,-109,60,-105,-113,-98,-79,-114,60,-104,-112,60,-103,-110,60,-102,-111,-99,60,60,]),'R_FLOAT':([37,209,218,259,300,323,],[117,117,117,117,117,117,]),'LE':([15,25,52,56,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,121,124,141,142,143,144,145,157,166,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,256,257,280,281,],[-192,-193,-183,-176,-166,-175,-199,-186,-187,-201,-178,165,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,165,165,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,-65,-66,-180,-191,]),'SEMICOLON':([15,25,34,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,72,73,74,76,77,79,80,82,83,84,85,87,88,89,91,92,93,94,95,96,97,98,99,100,102,103,104,107,108,109,110,121,124,136,140,141,142,143,144,145,146,147,155,156,157,158,166,174,175,176,177,196,197,198,199,206,207,210,211,212,213,214,215,216,222,223,225,226,227,228,229,238,243,245,246,247,248,249,250,251,252,254,256,257,262,263,264,265,277,278,280,281,282,286,288,291,293,302,303,307,309,312,314,315,316,317,318,320,324,327,330,331,332,333,335,341,342,346,347,],[-192,-193,82,-86,-72,-147,-95,-69,-71,82,-67,-183,-85,-90,-93,-176,-151,-166,82,-88,-80,-175,-131,-199,-96,-81,-187,-84,-201,-178,-153,-203,-184,-97,-83,-206,-89,-87,-73,-195,-197,-196,-194,-162,82,-169,-82,-198,-200,-202,82,82,-156,-149,-204,-205,82,-207,-79,-62,-61,-76,-75,-179,-186,-187,-174,-173,-70,-68,-125,82,-179,-130,-177,-74,-94,82,-127,-39,-47,82,-129,82,82,-150,-148,-154,-155,-170,-172,-171,-124,-185,-158,-160,-161,-157,-159,82,-101,-167,-168,-126,-146,-164,-165,-163,-152,-128,-65,-66,-78,-36,-35,-34,82,82,-180,-191,82,-109,82,-105,-28,-113,-98,-79,-114,82,-104,-112,82,-103,-110,-188,-77,82,-102,-111,-27,-38,-99,82,-117,82,-37,]),'RPARAN':([15,20,25,26,27,29,43,52,56,57,58,63,64,65,68,72,73,74,76,77,87,88,89,91,92,94,96,97,98,102,103,104,107,111,112,113,114,115,116,117,118,119,121,123,124,125,126,127,128,141,142,143,144,145,157,158,159,166,168,210,211,212,213,214,215,216,221,223,224,225,226,227,228,229,230,231,232,233,234,236,238,245,246,248,249,250,251,252,253,255,256,257,272,273,275,276,280,281,292,295,308,310,322,325,326,336,342,345,],[-192,-208,-193,-17,36,-18,-147,-183,-176,-151,-166,-175,-131,-199,-187,-201,-178,-153,-203,-184,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-60,-48,-57,-56,-23,-52,-59,-50,-54,-62,-49,-61,-53,-58,-51,-55,-179,-186,-187,-174,-173,-179,-130,223,-177,-208,-150,-148,-154,-155,-170,-172,-171,-208,-185,277,-158,-160,-161,-157,-159,278,-181,280,-182,-189,282,-116,-167,-168,-146,-164,-165,-163,-152,-208,-24,-65,-66,299,-29,-30,-31,-180,-191,320,-208,-190,-115,333,-33,-32,341,-117,347,]),'R_NEW':([34,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,208,222,243,247,254,258,277,278,282,286,288,291,297,302,303,307,309,312,314,315,316,317,318,321,327,330,331,335,341,346,],[105,-86,-72,-69,-71,105,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,267,-124,-101,-126,-128,267,105,105,105,-109,105,-105,267,-113,-98,-79,-114,105,-104,-112,105,-103,-110,267,105,-102,-111,-99,105,105,]),'BITRSHIFT':([15,25,52,56,58,63,65,66,68,72,73,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,141,142,143,144,145,157,166,214,215,216,223,225,226,228,229,245,246,249,250,251,280,281,],[-192,-193,-183,-176,-166,-175,-199,-186,-187,-201,-178,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,191,-204,-205,-179,-186,-187,-174,-173,-179,-177,-170,-172,-171,-185,191,191,191,191,-167,-168,-164,-165,-163,-180,-191,]),'R_DEF':([34,38,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,129,130,132,133,146,147,155,174,175,177,196,197,199,203,222,243,247,254,260,261,286,288,291,302,303,307,309,312,314,315,316,317,318,330,331,335,],[59,59,-86,-72,-69,-71,59,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,59,-22,-21,-19,-70,-68,-125,-74,-94,-127,-39,-47,-129,-20,-124,-101,-126,-128,-26,-25,-109,59,-105,-113,-98,-79,-114,59,-104,-112,59,-103,-110,-102,-111,-99,]),'R_CONTINUE':([34,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,222,243,247,254,277,278,282,286,288,291,302,303,307,309,312,314,315,316,317,318,327,330,331,335,341,346,],[100,-86,-72,-69,-71,100,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,-124,-101,-126,-128,100,100,100,-109,100,-105,-113,-98,-79,-114,100,-104,-112,100,-103,-110,100,-102,-111,-99,100,100,]),'LSQRB':([15,25,81,120,122,141,157,296,],[-192,-193,169,201,202,169,169,323,]),'R_UNIT':([218,],[270,]),'R_UNTIL':([15,25,43,52,56,57,58,63,64,65,68,72,73,74,76,77,87,88,89,91,92,94,96,97,98,102,103,104,107,121,124,141,142,143,144,145,157,158,166,210,211,212,213,214,215,216,223,225,226,227,228,229,245,246,248,249,250,251,252,256,257,280,281,329,],[-192,-193,-147,-183,-176,-151,-166,-175,-131,-199,-187,-201,-178,-153,-203,-184,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-130,-177,-150,-148,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-146,-164,-165,-163,-152,-65,-66,-180,-191,338,]),'LT':([15,25,52,56,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,121,124,141,142,143,144,145,157,166,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,256,257,280,281,],[-192,-193,-183,-176,-166,-175,-199,-186,-187,-201,-178,164,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,164,164,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,-65,-66,-180,-191,]),'COLON':([15,25,28,43,52,56,57,58,63,64,65,68,72,73,74,76,77,87,88,89,91,92,94,96,97,98,102,103,104,107,121,124,137,141,142,143,144,145,153,157,158,166,205,210,211,212,213,214,215,216,223,225,226,227,228,229,245,246,248,249,250,251,252,256,257,274,280,281,287,299,319,],[-192,-193,37,-147,-183,-176,-151,-166,-175,-131,-199,-187,-201,-178,-153,-203,-184,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-62,-61,209,-179,-186,-187,-174,-173,218,-179,-130,-177,259,-150,-148,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-146,-164,-165,-163,-152,-65,-66,300,-180,-191,315,-41,331,]),'BITANDASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,185,-132,-191,]),'PLUS':([15,25,34,41,42,45,47,48,49,50,51,52,53,54,55,56,58,61,62,63,65,66,67,68,69,70,72,73,75,76,77,80,81,82,83,84,85,87,88,89,91,92,94,95,96,97,98,104,107,108,109,110,138,139,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,161,162,164,165,166,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,214,215,216,222,223,243,245,246,247,249,250,251,253,254,258,277,278,279,280,281,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,346,],[-192,-193,47,-86,-72,47,47,-69,-71,47,-67,-183,-85,-90,-93,-176,-166,-88,-80,-175,-199,-186,-81,-187,-84,47,-201,-178,47,-203,-184,-83,-179,-206,-89,-87,-73,-195,-197,-196,-194,172,-169,-82,-198,-200,-202,-204,-205,47,-207,-79,47,47,-179,-186,-187,-174,-173,-70,-68,47,47,47,47,47,-125,-179,47,47,47,47,47,-177,47,47,47,47,47,-74,-94,-127,-141,-137,47,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,47,47,47,47,-39,-47,-129,47,-170,-172,-171,-124,-185,-101,-167,-168,-126,172,172,172,47,-128,47,47,47,47,-180,-191,47,-109,47,47,-105,47,47,-113,-98,-79,-114,47,47,-104,-112,47,-103,-110,47,47,47,-102,-111,-99,-123,-122,47,47,47,]),'DIVASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,183,-132,-191,]),'INT':([34,41,42,45,47,48,49,50,51,53,54,55,61,62,67,69,70,75,80,82,83,84,85,95,108,109,110,138,139,146,147,148,149,150,151,152,155,160,161,162,164,165,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,222,243,247,253,254,258,277,278,279,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,343,346,],[72,-86,-72,72,72,-69,-71,72,-67,-85,-90,-93,-88,-80,-81,-84,72,72,-83,-206,-89,-87,-73,-82,72,-207,-79,72,72,-70,-68,72,72,72,72,72,-125,72,72,72,72,72,72,72,72,72,72,-74,-94,-127,-141,-137,72,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,72,72,72,72,-39,-47,-129,72,-124,-101,-126,72,-128,72,72,72,72,72,-109,72,72,-105,72,72,-113,-98,-79,-114,72,72,-104,-112,72,-103,-110,72,72,72,-102,-111,-99,-123,-122,72,72,345,72,]),'R_DOUBLE':([37,209,218,259,300,323,],[111,111,111,111,111,111,]),'R_LIST':([37,163,209,218,259,300,323,],[122,122,122,122,122,122,122,]),'$end':([5,8,10,11,12,18,35,51,135,147,204,],[0,-9,-10,-1,-8,-7,-11,-67,-13,-68,-12,]),'DIVISION':([15,25,52,56,58,63,65,66,68,72,73,76,77,81,87,88,89,91,94,96,97,98,104,107,141,142,143,144,145,157,166,214,215,216,223,245,246,280,281,],[-192,-193,-183,-176,152,-175,-199,-186,-187,-201,-178,-203,-184,-179,-195,-197,-196,-194,-169,-198,-200,-202,-204,-205,-179,-186,-187,-174,-173,-179,-177,-170,-172,-171,-185,152,152,-180,-191,]),'GT':([15,25,52,56,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,121,124,141,142,143,144,145,157,166,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,256,257,280,281,],[-192,-193,-183,-176,-166,-175,-199,-186,-187,-201,-178,161,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,161,161,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,-65,-66,-180,-191,]),'BITLSHIFT':([15,25,52,56,58,63,65,66,68,72,73,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,141,142,143,144,145,157,166,214,215,216,223,225,226,228,229,245,246,249,250,251,280,281,],[-192,-193,-183,-176,-166,-175,-199,-186,-187,-201,-178,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,193,-204,-205,-179,-186,-187,-174,-173,-179,-177,-170,-172,-171,-185,193,193,193,193,-167,-168,-164,-165,-163,-180,-191,]),'STRING':([34,41,42,45,47,48,49,50,51,53,54,55,61,62,67,69,70,75,80,82,83,84,85,95,108,109,110,138,139,146,147,148,149,150,151,152,155,160,161,162,164,165,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,222,243,247,253,254,258,277,278,279,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,346,],[104,-86,-72,104,104,-69,-71,104,-67,-85,-90,-93,-88,-80,-81,-84,104,104,-83,-206,-89,-87,-73,-82,104,-207,-79,104,104,-70,-68,104,104,104,104,104,-125,104,104,104,104,104,104,104,104,104,104,-74,-94,-127,-141,-137,104,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,104,104,104,104,-39,-47,-129,104,-124,-101,-126,104,-128,104,104,104,104,104,-109,104,104,-105,104,104,-113,-98,-79,-114,104,104,-104,-112,104,-103,-110,104,104,104,-102,-111,-99,-123,-122,104,104,104,]),'R_TO':([15,25,43,52,56,57,58,63,64,65,68,72,73,74,76,77,87,88,89,91,92,94,96,97,98,102,103,104,107,121,124,141,142,143,144,145,157,158,166,210,211,212,213,214,215,216,223,225,226,227,228,229,245,246,248,249,250,251,252,256,257,280,281,329,],[-192,-193,-147,-183,-176,-151,-166,-175,-131,-199,-187,-201,-178,-153,-203,-184,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-130,-177,-150,-148,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-146,-164,-165,-163,-152,-65,-66,-180,-191,337,]),'R_ARRAY':([37,163,208,209,218,258,259,267,297,300,321,323,],[120,120,266,120,120,266,120,296,266,120,266,120,]),'R_OBJECT':([0,1,2,3,6,8,10,11,12,13,14,15,18,25,35,51,135,147,204,],[-208,9,-2,-4,-3,-9,-10,9,-8,-5,-6,-192,-7,-193,-11,-67,-13,-68,-12,]),'BLOCKCLOSE':([34,38,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,129,130,132,133,146,147,155,174,175,177,196,197,199,203,222,243,244,247,254,260,261,285,286,288,289,291,302,303,307,309,312,313,314,315,316,317,318,330,331,335,],[51,135,-86,-72,-69,-71,147,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,204,-22,-21,-19,-70,-68,-125,-74,-94,-127,-39,-47,-129,-20,-124,-101,291,-126,-128,-26,-25,314,-109,317,-106,-105,-113,-98,-79,-114,330,-107,-104,-112,-108,-103,-110,-102,-111,-99,]),'BITXORASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,189,-132,-191,]),'R_ELSE':([41,51,53,54,55,61,69,82,83,84,109,147,155,175,177,199,222,243,247,254,291,304,306,307,314,317,330,344,348,],[-86,-67,-85,-90,-93,-88,-84,-206,-89,-87,-207,-68,-125,-94,-127,-129,-124,-101,-126,-128,-105,327,-92,-91,-104,-103,-102,346,-100,]),'RSQRB':([15,25,43,52,56,57,58,63,64,65,68,72,73,74,76,77,87,88,89,91,92,94,96,97,98,102,103,104,107,111,112,113,114,116,117,118,119,121,123,124,125,126,127,128,141,142,143,144,145,157,158,166,201,202,210,211,212,213,214,215,216,223,225,226,227,228,229,235,245,246,248,249,250,251,252,256,257,280,281,334,],[-192,-193,-147,-183,-176,-151,-166,-175,-131,-199,-187,-201,-178,-153,-203,-184,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-60,-48,-57,-56,-52,-59,-50,-54,-62,-49,-61,-53,-58,-51,-55,-179,-186,-187,-174,-173,-179,-130,-177,256,257,-150,-148,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,281,-167,-168,-146,-164,-165,-163,-152,-65,-66,-180,-191,340,]),'GE':([15,25,52,56,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,104,107,121,124,141,142,143,144,145,157,166,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,256,257,280,281,],[-192,-193,-183,-176,-166,-175,-199,-186,-187,-201,-178,162,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,162,162,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,-65,-66,-180,-191,]),'R_WHILE':([34,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,222,243,247,254,277,278,282,286,288,291,302,303,307,309,312,314,315,316,317,318,327,330,331,335,341,346,],[71,-86,-72,-69,-71,71,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,-124,-101,-126,-128,71,71,71,-109,71,-105,-113,-98,-79,-114,71,-104,-112,71,-103,-110,71,-102,-111,-99,71,71,]),'BLOCKOPEN':([17,21,22,24,30,32,33,34,36,39,41,42,48,49,50,51,53,54,55,61,62,67,69,80,82,83,84,85,95,106,109,110,146,147,153,155,171,174,175,177,196,197,199,217,219,220,222,243,247,254,277,278,282,286,288,291,298,299,302,303,307,309,312,314,315,316,317,318,327,330,331,335,341,346,],[-208,-208,-15,34,38,-63,-14,34,-16,-64,-86,-72,-69,-71,34,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,34,-207,-79,-70,-68,-208,-125,244,-74,-94,-127,-39,-47,-129,-43,-40,-44,-124,-101,-126,-128,34,34,34,-109,34,-105,-42,-41,-113,-98,-79,-114,34,-104,-112,34,-103,-110,34,-102,-111,-99,34,34,]),'R_EXTENDS':([17,21,36,],[23,23,-16,]),'R_CASE':([41,42,48,49,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,222,243,244,247,254,285,286,288,289,291,302,303,307,309,312,313,314,315,316,317,318,330,331,335,],[-86,-72,-69,-71,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,-124,-101,290,-126,-128,290,-109,290,-106,-105,-113,-98,-79,-114,290,-107,-104,-112,-108,-103,-110,-102,-111,-99,]),'MODULUS':([15,25,52,56,58,63,65,66,68,72,73,76,77,81,87,88,89,91,94,96,97,98,104,107,141,142,143,144,145,157,166,214,215,216,223,245,246,280,281,],[-192,-193,-183,-176,151,-175,-199,-186,-187,-201,-178,-203,-184,-179,-195,-197,-196,-194,-169,-198,-200,-202,-204,-205,-179,-186,-187,-174,-173,-179,-177,-170,-172,-171,-185,151,151,-180,-191,]),'ID':([4,7,9,19,20,23,31,34,37,40,41,42,44,45,47,48,49,50,51,53,54,55,59,60,61,62,67,69,70,75,80,82,83,84,85,95,100,105,108,109,110,131,134,138,139,146,147,148,149,150,151,152,155,160,161,162,163,164,165,167,168,169,170,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,200,208,209,218,221,222,237,239,240,241,242,243,247,253,254,258,259,267,277,278,279,282,283,286,288,290,291,295,297,300,301,302,303,307,309,311,312,314,315,316,317,318,321,323,327,328,330,331,335,337,338,339,341,346,],[15,16,17,25,28,32,32,15,124,137,-86,-72,137,15,15,-69,-71,15,-67,-85,-90,-93,154,156,-88,-80,-81,-84,15,15,-83,-206,-89,-87,-73,-82,176,195,15,-207,-79,205,205,15,15,-70,-68,15,15,15,15,15,-125,15,15,15,124,15,15,15,15,15,-208,15,15,-74,-94,-127,-141,-137,15,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,15,15,15,15,-39,-47,-129,28,15,124,124,274,-124,-118,-121,-119,284,-120,-101,-126,15,-128,15,124,195,15,15,15,15,-208,-109,15,15,-105,15,15,124,274,-113,-98,-79,-114,15,15,-104,-112,15,-103,-110,15,124,15,15,-102,-111,-99,-123,-122,15,15,15,]),'OR':([15,25,43,52,56,57,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,103,104,107,121,124,141,142,143,144,145,157,166,210,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,252,256,257,280,281,],[-192,-193,139,-183,-176,-151,-166,-175,-199,-186,-187,-201,-178,-153,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,-150,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,-152,-65,-66,-180,-191,]),'LPARAN':([15,16,25,34,41,42,45,47,48,49,50,51,53,54,55,61,62,67,69,70,71,75,78,80,81,82,83,84,85,86,95,108,109,110,138,139,141,146,147,148,149,150,151,152,154,155,157,160,161,162,164,165,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,208,222,243,247,253,254,258,266,277,278,279,282,286,288,290,291,295,297,302,303,305,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,340,341,346,],[-192,20,-193,70,-86,-72,70,70,-69,-71,70,-67,-85,-90,-93,-88,-80,-81,-84,70,160,70,167,-83,168,-206,-89,-87,-73,170,-82,70,-207,-79,70,70,168,-70,-68,70,70,70,70,70,221,-125,168,70,70,70,70,70,70,70,70,70,70,-74,-94,-127,-141,-137,70,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,70,70,70,70,253,-39,-47,-129,70,-124,-101,-126,70,-128,70,295,70,70,70,70,-109,70,70,-105,70,70,-113,-98,328,-79,-114,70,70,-104,-112,70,-103,-110,70,70,70,-102,-111,-99,-123,-122,70,343,70,70,]),'BITRIGHTASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,178,-132,-191,]),'R_SHORT':([37,209,218,259,300,323,],[128,128,128,128,128,128,]),'R_LONG':([37,209,218,259,300,323,],[113,113,113,113,113,113,]),'R_CLASS':([0,1,2,3,6,8,10,11,12,13,14,15,18,25,35,51,135,147,204,],[-208,7,-2,-4,-3,-9,-10,7,-8,-5,-6,-192,-7,-193,-11,-67,-13,-68,-12,]),'R_NULL':([34,41,42,45,47,48,49,50,51,53,54,55,61,62,67,69,70,75,80,82,83,84,85,95,108,109,110,138,139,146,147,148,149,150,151,152,155,160,161,162,164,165,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,222,243,247,253,254,258,277,278,279,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,346,],[107,-86,-72,107,107,-69,-71,107,-67,-85,-90,-93,-88,-80,-81,-84,107,107,-83,-206,-89,-87,-73,-82,107,-207,-79,107,107,-70,-68,107,107,107,107,107,-125,107,107,107,107,107,107,107,107,107,107,-74,-94,-127,-141,-137,107,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,107,107,107,107,-39,-47,-129,107,-124,-101,-126,107,-128,107,107,107,107,107,-109,107,107,-105,107,107,-113,-98,-79,-114,107,107,-104,-112,107,-103,-110,107,107,107,-102,-111,-99,-123,-122,107,107,107,]),'SUBASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,181,-132,-191,]),'BITAND':([15,25,43,52,56,57,58,63,65,66,68,72,73,74,76,77,81,87,88,89,91,92,94,96,97,98,102,103,104,107,121,124,141,142,143,144,145,157,166,210,212,213,214,215,216,223,225,226,227,228,229,245,246,249,250,251,252,256,257,280,281,],[-192,-193,138,-183,-176,-151,-166,-175,-199,-186,-187,-201,-178,-153,-203,-184,-179,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-62,-61,-179,-186,-187,-174,-173,-179,-177,-150,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,-167,-168,-164,-165,-163,-152,-65,-66,-180,-191,]),'LINEFEED':([15,25,34,41,42,43,46,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,72,73,74,76,77,79,80,82,83,84,85,87,88,89,91,92,93,94,95,96,97,98,99,100,102,103,104,107,108,109,110,121,124,136,140,141,142,143,144,145,146,147,155,156,157,158,166,174,175,176,177,196,197,198,199,206,207,210,211,212,213,214,215,216,222,223,225,226,227,228,229,238,243,245,246,247,248,249,250,251,252,254,256,257,262,263,264,265,277,278,280,281,282,286,288,291,293,302,303,307,309,312,314,315,316,317,318,320,324,327,330,331,332,333,335,341,342,346,347,],[-192,-193,109,-86,-72,-147,-95,-69,-71,109,-67,-183,-85,-90,-93,-176,-151,-166,109,-88,-80,-175,-131,-199,-96,-81,-187,-84,-201,-178,-153,-203,-184,-97,-83,-206,-89,-87,-73,-195,-197,-196,-194,-162,109,-169,-82,-198,-200,-202,109,109,-156,-149,-204,-205,109,-207,-79,-62,-61,-76,-75,-179,-186,-187,-174,-173,-70,-68,-125,109,-179,-130,-177,-74,-94,109,-127,-39,-47,109,-129,109,109,-150,-148,-154,-155,-170,-172,-171,-124,-185,-158,-160,-161,-157,-159,109,-101,-167,-168,-126,-146,-164,-165,-163,-152,-128,-65,-66,-78,-36,-35,-34,109,109,-180,-191,109,-109,109,-105,-28,-113,-98,-79,-114,109,-104,-112,109,-103,-110,-188,-77,109,-102,-111,-27,-38,-99,109,-117,109,-37,]),'MULASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,182,-132,-191,]),'MODASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,179,-132,-191,]),'EQUALASS':([15,25,68,81,101,111,112,113,114,116,117,118,119,121,123,124,125,126,127,128,137,153,157,205,256,257,268,269,270,271,281,294,299,],[-192,-193,-133,-132,184,-60,-48,-57,-56,-52,-59,-50,-54,-62,-49,-61,-53,-58,-51,-55,208,217,-132,258,-65,-66,297,-45,-46,298,-191,321,-41,]),'BOOL':([34,41,42,45,47,48,49,50,51,53,54,55,61,62,67,69,70,75,80,82,83,84,85,95,108,109,110,138,139,146,147,148,149,150,151,152,155,160,161,162,164,165,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,222,243,247,253,254,258,277,278,279,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,346,],[97,-86,-72,97,97,-69,-71,97,-67,-85,-90,-93,-88,-80,-81,-84,97,97,-83,-206,-89,-87,-73,-82,97,-207,-79,97,97,-70,-68,97,97,97,97,97,-125,97,97,97,97,97,97,97,97,97,97,-74,-94,-127,-141,-137,97,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,97,97,97,97,-39,-47,-129,97,-124,-101,-126,97,-128,97,97,97,97,97,-109,97,97,-105,97,97,-113,-98,-79,-114,97,97,-104,-112,97,-103,-110,97,97,97,-102,-111,-99,-123,-122,97,97,97,]),'BITRSFILLASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,190,-132,-191,]),'R_CHAR':([37,209,218,259,300,323,],[126,126,126,126,126,126,]),'NOT':([34,41,42,45,47,48,49,50,51,53,54,55,61,62,67,69,70,75,80,82,83,84,85,95,108,109,110,138,139,146,147,148,149,150,151,152,155,160,161,162,164,165,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,222,243,247,253,254,258,277,278,279,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,346,],[75,-86,-72,75,75,-69,-71,75,-67,-85,-90,-93,-88,-80,-81,-84,75,75,-83,-206,-89,-87,-73,-82,75,-207,-79,75,75,-70,-68,75,75,75,75,75,-125,75,75,75,75,75,75,75,75,75,75,-74,-94,-127,-141,-137,75,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,75,75,75,75,-39,-47,-129,75,-124,-101,-126,75,-128,75,75,75,75,75,-109,75,75,-105,75,75,-113,-98,-79,-114,75,75,-104,-112,75,-103,-110,75,75,75,-102,-111,-99,-123,-122,75,75,75,]),'R_BOOLEAN':([37,209,218,259,300,323,],[127,127,127,127,127,127,]),'COMMA':([15,25,43,52,56,57,58,63,64,65,68,72,73,74,76,77,87,88,89,91,92,94,96,97,98,102,103,104,107,111,112,113,114,115,116,117,118,119,121,123,124,125,126,127,128,141,142,143,144,145,157,158,166,210,211,212,213,214,215,216,223,225,226,227,228,229,231,234,245,246,248,249,250,251,252,256,257,276,280,281,308,325,],[-192,-193,-147,-183,-176,-151,-166,-175,-131,-199,-187,-201,-178,-153,-203,-184,-195,-197,-196,-194,-162,-169,-198,-200,-202,-156,-149,-204,-205,-60,-48,-57,-56,200,-52,-59,-50,-54,-62,-49,-61,-53,-58,-51,-55,-179,-186,-187,-174,-173,-179,-130,-177,-150,-148,-154,-155,-170,-172,-171,-185,-158,-160,-161,-157,-159,279,-189,-167,-168,-146,-164,-165,-163,-152,-65,-66,301,-180,-191,-190,-33,]),'FLOAT':([34,41,42,45,47,48,49,50,51,53,54,55,61,62,67,69,70,75,80,82,83,84,85,95,108,109,110,138,139,146,147,148,149,150,151,152,155,160,161,162,164,165,167,168,169,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,208,222,243,247,253,254,258,277,278,279,282,286,288,290,291,295,297,302,303,307,309,311,312,314,315,316,317,318,321,327,328,330,331,335,337,338,339,341,346,],[98,-86,-72,98,98,-69,-71,98,-67,-85,-90,-93,-88,-80,-81,-84,98,98,-83,-206,-89,-87,-73,-82,98,-207,-79,98,98,-70,-68,98,98,98,98,98,-125,98,98,98,98,98,98,98,98,98,98,-74,-94,-127,-141,-137,98,-139,-135,-136,-134,-143,-140,-138,-145,-144,-142,98,98,98,98,-39,-47,-129,98,-124,-101,-126,98,-128,98,98,98,98,98,-109,98,98,-105,98,98,-113,-98,-79,-114,98,98,-104,-112,98,-103,-110,98,98,98,-102,-111,-99,-123,-122,98,98,98,]),'BITORASS':([15,25,68,81,101,157,281,],[-192,-193,-133,-132,188,-132,-191,]),'R_IMPORT':([0,2,3,13,14,15,25,],[4,4,-4,-5,-6,-192,-193,]),'R_DEFAULT':([41,42,48,49,51,53,54,55,61,62,67,69,80,82,83,84,85,95,109,110,146,147,155,174,175,177,196,197,199,222,243,244,247,254,285,286,288,289,291,302,303,307,309,312,313,314,315,316,317,318,330,331,335,],[-86,-72,-69,-71,-67,-85,-90,-93,-88,-80,-81,-84,-83,-206,-89,-87,-73,-82,-207,-79,-70,-68,-125,-74,-94,-127,-39,-47,-129,-124,-101,287,-126,-128,287,-109,287,-106,-105,-113,-98,-79,-114,287,-107,-104,-112,-108,-103,-110,-102,-111,-99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ClassBodyDeclarations':([38,],[129,]),'ExpressionStatement':([34,50,277,278,282,288,312,316,327,341,346,],[41,41,41,41,41,41,41,41,41,41,41,]),'PrimitiveType':([37,209,218,259,300,323,],[112,112,112,112,112,112,]),'Statement':([34,50,277,278,282,288,312,316,327,341,346,],[42,42,302,303,309,42,42,42,335,303,335,]),'AndExpression':([34,50,70,108,139,160,167,168,169,180,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ArgumentList':([168,253,295,],[231,231,231,]),'Assignment':([34,50,70,108,160,167,168,169,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[46,46,158,158,158,158,158,158,158,158,158,46,46,158,46,46,158,158,158,158,46,46,158,46,158,158,46,46,]),'ClassBodyDeclaration':([38,129,],[133,203,]),'BlockStatement':([34,50,288,312,316,],[48,146,48,48,146,]),'FormalParameterLists':([20,],[27,]),'SwitchBlockStatementGroups':([244,],[285,]),'VariableDeclarationBody':([40,44,],[136,140,]),'ForVariables':([170,283,],[238,238,]),'BlockStatements':([34,288,312,],[50,316,316,]),'ForUntilTo':([329,],[339,]),'PrimaryNoNewArray':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'AssignmentOperator':([101,],[180,]),'FieldDeclaration':([38,129,],[132,132,]),'ReturnStatement':([34,50,277,278,282,288,312,316,327,341,346,],[54,54,54,54,54,54,54,54,54,54,54,]),'EndStatement':([34,50,60,93,99,100,108,156,176,198,206,207,238,277,278,282,288,312,316,327,341,346,],[55,55,155,174,175,177,199,222,247,254,260,261,283,55,55,55,55,55,55,55,55,55,]),'VariableDeclarator':([221,301,],[276,276,]),'PostfixExpression':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'SwitchLabel':([244,285,288,312,],[286,286,318,318,]),'Type':([37,209,218,259,300,323,],[115,268,269,294,325,334,]),'EqualityExpression':([34,50,70,108,138,139,160,167,168,169,180,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[57,57,57,57,57,57,57,57,57,57,57,252,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FuncArgumentListExtras':([221,],[272,]),'VariableDeclarator1':([131,134,],[206,207,]),'MultiplicativeExpression':([34,50,70,108,138,139,148,149,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,245,246,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'BreakStatement':([34,50,277,278,282,288,312,316,327,341,346,],[61,61,61,61,61,61,61,61,61,61,61,]),'IfThenStatement':([34,50,277,278,282,288,312,316,327,341,346,],[62,62,62,62,62,62,62,62,62,62,62,]),'Super':([17,21,],[24,30,]),'ArrayInitializer':([208,258,297,321,],[265,265,265,265,]),'UnaryExpressionNotPlusMinus':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ObjectDeclaration':([1,11,],[8,8,]),'SwitchBlock':([171,],[243,]),'OrExpression':([34,50,70,108,139,160,167,168,169,180,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[64,64,64,64,211,64,64,64,64,248,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'NullLiteral':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'EmptyStatement':([34,50,277,278,282,288,312,316,327,341,346,],[53,53,53,53,53,53,53,53,53,53,53,]),'StatementNoShortIf':([278,341,346,],[304,344,348,]),'MethodInvocation':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[66,142,142,66,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,66,66,142,66,66,142,142,142,142,66,66,142,66,142,142,66,66,]),'IfThenElseStatement':([34,50,277,278,282,288,312,316,327,341,346,],[67,67,67,67,67,67,67,67,67,67,67,]),'ArrayAccess':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[68,143,143,68,68,143,68,143,143,143,143,143,143,143,68,143,143,143,143,68,68,68,143,143,143,143,143,143,143,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'Block':([24,34,50,106,277,278,282,288,312,316,327,341,346,],[35,69,69,197,69,69,69,69,69,69,69,69,69,]),'CharacterLiteral':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'VariableDeclarators':([221,301,],[273,326,]),'Primary':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'RelationalExpression':([34,50,70,108,138,139,148,149,160,167,168,169,180,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[74,74,74,74,74,74,212,213,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'ClassHeader':([16,],[21,]),'VariableInitializer':([208,258,297,321,],[262,293,324,332,]),'Literal':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'DeclarationKeywordExtras':([170,283,],[241,241,]),'ClassInstanceCreationExpression':([34,50,208,258,277,278,282,288,297,312,316,321,327,341,346,],[79,79,263,263,79,79,79,79,263,79,79,263,79,79,79,]),'ForStatement':([34,50,277,278,282,288,312,316,327,341,346,],[80,80,80,80,80,80,80,80,80,80,80,]),'AmbiguousName':([4,34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[14,81,141,141,81,157,141,157,141,141,141,141,141,141,141,157,141,141,141,141,157,157,157,141,141,141,141,141,141,141,157,157,157,81,81,157,81,81,157,157,157,157,81,81,157,81,157,157,81,81,]),'ContinueStatement':([34,50,277,278,282,288,312,316,327,341,346,],[83,83,83,83,83,83,83,83,83,83,83,]),'ImportDeclaration':([0,2,],[3,13,]),'SwitchStatement':([34,50,277,278,282,288,312,316,327,341,346,],[84,84,84,84,84,84,84,84,84,84,84,]),'SwitchBlockStatementGroup':([244,285,],[289,313,]),'MethodDeclaration':([34,38,50,129,288,312,316,],[85,130,85,130,85,85,85,]),'empty':([0,17,20,21,153,168,170,221,253,283,295,],[6,22,29,22,220,233,240,275,233,240,233,]),'MethodReturnType':([218,],[271,]),'FloatingPointLiteral':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'BooleanLiteral':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'SwitchLabels':([244,285,],[288,312,]),'FormalParameterList':([20,200,],[26,255,]),'Expression':([34,50,70,108,160,167,168,169,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[90,90,159,198,224,230,234,235,264,234,264,90,90,308,90,90,319,234,264,329,90,90,264,90,336,342,90,90,]),'IntegerLiteral':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'AdditiveExpression':([34,50,70,108,138,139,148,149,160,161,162,164,165,167,168,169,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,249,250,251,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'FloatingPointType':([37,209,218,259,300,323,],[125,125,125,125,125,125,]),'LocalVariableDeclaration':([34,50,288,312,316,],[93,93,93,93,93,]),'UnaryExpression':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[94,144,145,94,94,166,94,94,94,94,94,214,215,216,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'ForExprs':([170,283,],[236,310,]),'ClassType':([23,31,],[33,39,]),'WhileStatement':([34,50,277,278,282,288,312,316,327,341,346,],[95,95,95,95,95,95,95,95,95,95,95,]),'StringLiteral':([34,45,47,50,70,75,108,138,139,148,149,150,151,152,160,161,162,164,165,167,168,169,172,173,180,191,192,193,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'ClassDeclaration':([1,11,],[10,10,]),'ClassAndObjectDeclaration':([1,11,],[12,18,]),'VariableHeader':([170,283,],[237,237,]),'ImportDeclarations':([0,],[2,]),'ArrayType':([37,163,209,218,259,300,323,],[121,121,121,121,121,121,121,]),'StatementExpression':([34,50,277,278,282,288,312,316,327,341,346,],[99,99,99,99,99,99,99,99,99,99,99,]),'MethodDeclarator':([59,],[153,]),'IntegralType':([37,209,218,259,300,323,],[116,116,116,116,116,116,]),'NumericType':([37,209,218,259,300,323,],[118,118,118,118,118,118,]),'LeftHandSide':([34,50,70,108,160,167,168,169,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'IfThenElseStatementNoShortIf':([278,341,346,],[306,306,306,]),'LocalVariableDeclarationStatement':([34,50,288,312,316,],[49,49,49,49,49,]),'ArgumentLists':([168,253,295,],[232,292,322,]),'ShiftExpression':([34,50,70,108,138,139,148,149,160,161,162,164,165,167,168,169,180,194,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[102,102,102,102,102,102,102,102,102,225,226,228,229,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'MethodBody':([106,],[196,]),'XorExpression':([34,50,70,108,138,139,160,167,168,169,180,208,253,258,277,278,279,282,288,290,295,297,311,312,316,321,327,328,339,341,346,],[103,103,103,103,210,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'ClassObjectsList':([1,],[11,]),'ReferenceType':([37,163,209,218,259,300,323,],[123,227,123,123,123,123,123,]),'CompilationUnit':([0,],[5,]),'MethodHeader':([34,38,50,129,288,312,316,],[106,106,106,106,106,106,106,]),'ImportDeclarationss':([0,],[1,]),'MethodReturnTypeExtras':([153,],[219,]),'StatementWithoutTrailingSubstatement':([34,50,277,278,282,288,312,316,327,341,346,],[110,110,110,307,110,110,110,110,110,307,307,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('CompilationUnit -> ImportDeclarationss ClassObjectsList','CompilationUnit',2,'p_CompilationUnit','parser.py',32),
  ('ImportDeclarationss -> ImportDeclarations','ImportDeclarationss',1,'p_ImportDeclarationss','parser.py',39),
  ('ImportDeclarationss -> empty','ImportDeclarationss',1,'p_ImportDeclarationss','parser.py',40),
  ('ImportDeclarations -> ImportDeclaration','ImportDeclarations',1,'p_ImportDeclarations','parser.py',48),
  ('ImportDeclarations -> ImportDeclarations ImportDeclaration','ImportDeclarations',2,'p_ImportDeclarations','parser.py',49),
  ('ImportDeclaration -> R_IMPORT AmbiguousName','ImportDeclaration',2,'p_ImportDeclaration','parser.py',58),
  ('ClassObjectsList -> ClassObjectsList ClassAndObjectDeclaration','ClassObjectsList',2,'p_ClassObjectsList','parser.py',63),
  ('ClassObjectsList -> ClassAndObjectDeclaration','ClassObjectsList',1,'p_ClassObjectsList','parser.py',64),
  ('ClassAndObjectDeclaration -> ObjectDeclaration','ClassAndObjectDeclaration',1,'p_ClassAndObjectDeclaration','parser.py',71),
  ('ClassAndObjectDeclaration -> ClassDeclaration','ClassAndObjectDeclaration',1,'p_ClassAndObjectDeclaration','parser.py',72),
  ('ObjectDeclaration -> R_OBJECT ID Super Block','ObjectDeclaration',4,'p_ObjectDeclaration','parser.py',78),
  ('ClassDeclaration -> R_CLASS ID ClassHeader Super BLOCKOPEN ClassBodyDeclarations BLOCKCLOSE','ClassDeclaration',7,'p_ClassDeclaration','parser.py',84),
  ('ClassDeclaration -> R_CLASS ID ClassHeader Super BLOCKOPEN BLOCKCLOSE','ClassDeclaration',6,'p_ClassDeclaration','parser.py',85),
  ('Super -> R_EXTENDS ClassType','Super',2,'p_Super','parser.py',101),
  ('Super -> empty','Super',1,'p_Super','parser.py',102),
  ('ClassHeader -> LPARAN FormalParameterLists RPARAN','ClassHeader',3,'p_ClassHeader','parser.py',109),
  ('FormalParameterLists -> FormalParameterList','FormalParameterLists',1,'p_FormalParameterLists','parser.py',116),
  ('FormalParameterLists -> empty','FormalParameterLists',1,'p_FormalParameterLists','parser.py',117),
  ('ClassBodyDeclarations -> ClassBodyDeclaration','ClassBodyDeclarations',1,'p_ClassBodyDeclarations','parser.py',125),
  ('ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration','ClassBodyDeclarations',2,'p_ClassBodyDeclarations','parser.py',126),
  ('ClassBodyDeclaration -> FieldDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',133),
  ('ClassBodyDeclaration -> MethodDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',134),
  ('FormalParameterList -> ID COLON Type','FormalParameterList',3,'p_FormalParameterList','parser.py',142),
  ('FormalParameterList -> ID COLON Type COMMA FormalParameterList','FormalParameterList',5,'p_FormalParameterList','parser.py',143),
  ('FieldDeclaration -> R_VAL VariableDeclarator1 EndStatement','FieldDeclaration',3,'p_FieldDeclaration','parser.py',151),
  ('FieldDeclaration -> R_VAR VariableDeclarator1 EndStatement','FieldDeclaration',3,'p_FieldDeclaration','parser.py',152),
  ('VariableDeclarator1 -> ID COLON Type EQUALASS VariableInitializer','VariableDeclarator1',5,'p_VariableDeclarator1','parser.py',157),
  ('VariableDeclarator1 -> ID EQUALASS VariableInitializer','VariableDeclarator1',3,'p_VariableDeclarator1','parser.py',158),
  ('FuncArgumentListExtras -> VariableDeclarators','FuncArgumentListExtras',1,'p_FuncArgumentListExtras','parser.py',165),
  ('FuncArgumentListExtras -> empty','FuncArgumentListExtras',1,'p_FuncArgumentListExtras','parser.py',166),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','parser.py',173),
  ('VariableDeclarators -> VariableDeclarator COMMA VariableDeclarators','VariableDeclarators',3,'p_VariableDeclarators','parser.py',174),
  ('VariableDeclarator -> ID COLON Type','VariableDeclarator',3,'p_VariableDeclarator','parser.py',181),
  ('VariableInitializer -> ArrayInitializer','VariableInitializer',1,'p_VariableInitializer','parser.py',185),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','parser.py',186),
  ('VariableInitializer -> ClassInstanceCreationExpression','VariableInitializer',1,'p_VariableInitializer','parser.py',187),
  ('ArrayInitializer -> R_NEW R_ARRAY LSQRB Type RSQRB LPARAN INT RPARAN','ArrayInitializer',8,'p_ArrayInitializer','parser.py',191),
  ('ArrayInitializer -> R_ARRAY LPARAN ArgumentLists RPARAN','ArrayInitializer',4,'p_ArrayInitializer','parser.py',192),
  ('MethodDeclaration -> MethodHeader MethodBody','MethodDeclaration',2,'p_MethodDeclaration','parser.py',200),
  ('MethodHeader -> R_DEF MethodDeclarator MethodReturnTypeExtras','MethodHeader',3,'p_MethodHeader','parser.py',204),
  ('MethodDeclarator -> ID LPARAN FuncArgumentListExtras RPARAN','MethodDeclarator',4,'p_MethodDeclarator','parser.py',208),
  ('MethodReturnTypeExtras -> COLON MethodReturnType EQUALASS','MethodReturnTypeExtras',3,'p_MethodReturnTypeExtras','parser.py',215),
  ('MethodReturnTypeExtras -> EQUALASS','MethodReturnTypeExtras',1,'p_MethodReturnTypeExtras','parser.py',216),
  ('MethodReturnTypeExtras -> empty','MethodReturnTypeExtras',1,'p_MethodReturnTypeExtras','parser.py',217),
  ('MethodReturnType -> Type','MethodReturnType',1,'p_MethodReturnType','parser.py',226),
  ('MethodReturnType -> R_UNIT','MethodReturnType',1,'p_MethodReturnType','parser.py',227),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','parser.py',235),
  ('Type -> PrimitiveType','Type',1,'p_Type','parser.py',240),
  ('Type -> ReferenceType','Type',1,'p_Type','parser.py',241),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','parser.py',249),
  ('PrimitiveType -> R_BOOLEAN','PrimitiveType',1,'p_PrimitiveType','parser.py',250),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','parser.py',258),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','parser.py',259),
  ('IntegralType -> R_BYTE','IntegralType',1,'p_IntegralType','parser.py',268),
  ('IntegralType -> R_SHORT','IntegralType',1,'p_IntegralType','parser.py',269),
  ('IntegralType -> R_INT','IntegralType',1,'p_IntegralType','parser.py',270),
  ('IntegralType -> R_LONG','IntegralType',1,'p_IntegralType','parser.py',271),
  ('IntegralType -> R_CHAR','IntegralType',1,'p_IntegralType','parser.py',272),
  ('FloatingPointType -> R_FLOAT','FloatingPointType',1,'p_FloatingPointType','parser.py',277),
  ('FloatingPointType -> R_DOUBLE','FloatingPointType',1,'p_FloatingPointType','parser.py',278),
  ('ReferenceType -> ID','ReferenceType',1,'p_ReferenceType','parser.py',283),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','parser.py',284),
  ('ClassType -> ID','ClassType',1,'p_ClassType','parser.py',292),
  ('ClassType -> R_WITH ClassType','ClassType',2,'p_ClassType','parser.py',293),
  ('ArrayType -> R_ARRAY LSQRB RSQRB','ArrayType',3,'p_ArrayType','parser.py',300),
  ('ArrayType -> R_LIST LSQRB RSQRB','ArrayType',3,'p_ArrayType','parser.py',301),
  ('Block -> BLOCKOPEN BLOCKCLOSE','Block',2,'p_Block','parser.py',306),
  ('Block -> BLOCKOPEN BlockStatements BLOCKCLOSE','Block',3,'p_Block','parser.py',307),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','parser.py',314),
  ('BlockStatements -> BlockStatements BlockStatement','BlockStatements',2,'p_BlockStatements','parser.py',315),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','parser.py',322),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','parser.py',323),
  ('BlockStatement -> MethodDeclaration','BlockStatement',1,'p_BlockStatement','parser.py',324),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration EndStatement','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','parser.py',331),
  ('LocalVariableDeclaration -> R_VAL VariableDeclarationBody','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser.py',335),
  ('LocalVariableDeclaration -> R_VAR VariableDeclarationBody','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser.py',336),
  ('VariableDeclarationBody -> ID COLON Type EQUALASS VariableInitializer','VariableDeclarationBody',5,'p_VariableDeclarationBody','parser.py',340),
  ('VariableDeclarationBody -> ID EQUALASS VariableInitializer','VariableDeclarationBody',3,'p_VariableDeclarationBody','parser.py',341),
  ('Statement -> StatementWithoutTrailingSubstatement','Statement',1,'p_Statement','parser.py',349),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','parser.py',350),
  ('Statement -> IfThenElseStatement','Statement',1,'p_Statement','parser.py',351),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','parser.py',352),
  ('Statement -> ForStatement','Statement',1,'p_Statement','parser.py',353),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',359),
  ('StatementWithoutTrailingSubstatement -> EmptyStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',360),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',361),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',362),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',363),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',364),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',365),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',371),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',372),
  ('EmptyStatement -> EndStatement','EmptyStatement',1,'p_EmptyStatement','parser.py',377),
  ('ExpressionStatement -> StatementExpression EndStatement','ExpressionStatement',2,'p_ExpressionStatement','parser.py',382),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','parser.py',389),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','parser.py',390),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','parser.py',391),
  ('IfThenStatement -> R_IF LPARAN Expression RPARAN Statement','IfThenStatement',5,'p_IfThenStatement','parser.py',399),
  ('IfThenElseStatement -> R_IF LPARAN Expression RPARAN StatementNoShortIf R_ELSE Statement','IfThenElseStatement',7,'p_IfThenElseStatement','parser.py',403),
  ('IfThenElseStatementNoShortIf -> R_IF LPARAN Expression RPARAN StatementNoShortIf R_ELSE StatementNoShortIf','IfThenElseStatementNoShortIf',7,'p_IfThenElseStatementNoShortIf','parser.py',407),
  ('SwitchStatement -> Expression R_MATCH SwitchBlock','SwitchStatement',3,'p_SwitchStatement','parser.py',411),
  ('SwitchBlock -> BLOCKOPEN SwitchBlockStatementGroups SwitchLabels BLOCKCLOSE','SwitchBlock',4,'p_SwitchBlock','parser.py',416),
  ('SwitchBlock -> BLOCKOPEN SwitchLabels BLOCKCLOSE','SwitchBlock',3,'p_SwitchBlock','parser.py',417),
  ('SwitchBlock -> BLOCKOPEN SwitchBlockStatementGroups BLOCKCLOSE','SwitchBlock',3,'p_SwitchBlock','parser.py',418),
  ('SwitchBlock -> BLOCKOPEN BLOCKCLOSE','SwitchBlock',2,'p_SwitchBlock','parser.py',419),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroup','SwitchBlockStatementGroups',1,'p_SwitchBlockStatementGroups','parser.py',430),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup','SwitchBlockStatementGroups',2,'p_SwitchBlockStatementGroups','parser.py',431),
  ('SwitchBlockStatementGroup -> SwitchLabels BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','parser.py',438),
  ('SwitchLabels -> SwitchLabel','SwitchLabels',1,'p_SwitchLabels','parser.py',442),
  ('SwitchLabels -> SwitchLabels SwitchLabel','SwitchLabels',2,'p_SwitchLabels','parser.py',443),
  ('SwitchLabel -> R_CASE Expression COLON','SwitchLabel',3,'p_SwitchLabel','parser.py',450),
  ('SwitchLabel -> R_DEFAULT COLON','SwitchLabel',2,'p_SwitchLabel','parser.py',451),
  ('WhileStatement -> R_WHILE LPARAN Expression RPARAN Statement','WhileStatement',5,'p_WhileStatement','parser.py',458),
  ('ForStatement -> R_FOR LPARAN ForExprs RPARAN Statement','ForStatement',5,'p_ForStatement','parser.py',462),
  ('ForExprs -> ForVariables EndStatement ForExprs','ForExprs',3,'p_ForExprs','parser.py',467),
  ('ForExprs -> ForVariables','ForExprs',1,'p_ForExprs','parser.py',468),
  ('ForVariables -> DeclarationKeywordExtras ID R_LEFTARROW1 Expression ForUntilTo Expression','ForVariables',6,'p_ForVariables','parser.py',476),
  ('DeclarationKeywordExtras -> VariableHeader','DeclarationKeywordExtras',1,'p_DeclarationKeywordExtras','parser.py',481),
  ('DeclarationKeywordExtras -> empty','DeclarationKeywordExtras',1,'p_DeclarationKeywordExtras','parser.py',482),
  ('VariableHeader -> R_VAL','VariableHeader',1,'p_VariableHeader','parser.py',489),
  ('VariableHeader -> R_VAR','VariableHeader',1,'p_VariableHeader','parser.py',490),
  ('ForUntilTo -> R_UNTIL','ForUntilTo',1,'p_ForUntilTo','parser.py',494),
  ('ForUntilTo -> R_TO','ForUntilTo',1,'p_ForUntilTo','parser.py',495),
  ('BreakStatement -> R_BREAK ID EndStatement','BreakStatement',3,'p_BreakStatement','parser.py',500),
  ('BreakStatement -> R_BREAK EndStatement','BreakStatement',2,'p_BreakStatement','parser.py',501),
  ('ContinueStatement -> R_CONTINUE ID EndStatement','ContinueStatement',3,'p_ContinueStatement','parser.py',508),
  ('ContinueStatement -> R_CONTINUE EndStatement','ContinueStatement',2,'p_ContinueStatement','parser.py',509),
  ('ReturnStatement -> R_RETURN Expression EndStatement','ReturnStatement',3,'p_ReturnStatement','parser.py',516),
  ('ReturnStatement -> R_RETURN EndStatement','ReturnStatement',2,'p_ReturnStatement','parser.py',517),
  ('Expression -> Assignment','Expression',1,'p_Expression','parser.py',525),
  ('Expression -> OrExpression','Expression',1,'p_Expression','parser.py',526),
  ('LeftHandSide -> AmbiguousName','LeftHandSide',1,'p_LeftHandSide','parser.py',537),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',538),
  ('AssignmentOperator -> EQUALASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',543),
  ('AssignmentOperator -> MULASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',544),
  ('AssignmentOperator -> DIVASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',545),
  ('AssignmentOperator -> MODASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',546),
  ('AssignmentOperator -> ADDASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',547),
  ('AssignmentOperator -> SUBASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',548),
  ('AssignmentOperator -> BITLEFTASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',549),
  ('AssignmentOperator -> BITRIGHTASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',550),
  ('AssignmentOperator -> BITRSFILLASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',551),
  ('AssignmentOperator -> BITANDASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',552),
  ('AssignmentOperator -> BITXORASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',553),
  ('AssignmentOperator -> BITORASS','AssignmentOperator',1,'p_AssignmentOperator','parser.py',554),
  ('Assignment -> LeftHandSide AssignmentOperator OrExpression','Assignment',3,'p_Assignment','parser.py',559),
  ('OrExpression -> AndExpression','OrExpression',1,'p_OrExpression','parser.py',563),
  ('OrExpression -> AndExpression OR OrExpression','OrExpression',3,'p_OrExpression','parser.py',564),
  ('AndExpression -> XorExpression','AndExpression',1,'p_AndExpression','parser.py',571),
  ('AndExpression -> AndExpression BITAND XorExpression','AndExpression',3,'p_AndExpression','parser.py',572),
  ('XorExpression -> EqualityExpression','XorExpression',1,'p_XorExpression','parser.py',579),
  ('XorExpression -> XorExpression BITXOR EqualityExpression','XorExpression',3,'p_XorExpression','parser.py',580),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','parser.py',589),
  ('EqualityExpression -> EqualityExpression EQUAL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',590),
  ('EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',591),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','parser.py',598),
  ('RelationalExpression -> RelationalExpression LT ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',599),
  ('RelationalExpression -> RelationalExpression GT ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',600),
  ('RelationalExpression -> RelationalExpression LE ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',601),
  ('RelationalExpression -> RelationalExpression GE ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',602),
  ('RelationalExpression -> RelationalExpression R_INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','parser.py',603),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','parser.py',610),
  ('ShiftExpression -> ShiftExpression BITLSHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',611),
  ('ShiftExpression -> ShiftExpression BITRSHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',612),
  ('ShiftExpression -> ShiftExpression BITRSFILL AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',613),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','parser.py',621),
  ('AdditiveExpression -> AdditiveExpression PLUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',622),
  ('AdditiveExpression -> AdditiveExpression MINUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',623),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','parser.py',631),
  ('MultiplicativeExpression -> MultiplicativeExpression MULTIPLICATION UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',632),
  ('MultiplicativeExpression -> MultiplicativeExpression DIVISION UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',633),
  ('MultiplicativeExpression -> MultiplicativeExpression MODULUS UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',634),
  ('UnaryExpression -> PLUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',641),
  ('UnaryExpression -> MINUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',642),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','parser.py',643),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',652),
  ('UnaryExpressionNotPlusMinus -> NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',653),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','parser.py',662),
  ('PostfixExpression -> AmbiguousName','PostfixExpression',1,'p_PostfixExpression','parser.py',663),
  ('MethodInvocation -> AmbiguousName LPARAN ArgumentLists RPARAN','MethodInvocation',4,'p_MethodInvocation','parser.py',670),
  ('ArgumentLists -> ArgumentList','ArgumentLists',1,'p_ArgumentLists','parser.py',683),
  ('ArgumentLists -> empty','ArgumentLists',1,'p_ArgumentLists','parser.py',684),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','parser.py',691),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',699),
  ('PrimaryNoNewArray -> LPARAN Expression RPARAN','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','parser.py',700),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',701),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',702),
  ('ClassInstanceCreationExpression -> R_NEW ID LPARAN ArgumentLists RPARAN','ClassInstanceCreationExpression',5,'p_ClassInstanceCreationExpression','parser.py',712),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','parser.py',721),
  ('ArgumentList -> ArgumentList COMMA Expression','ArgumentList',3,'p_ArgumentList','parser.py',722),
  ('ArrayAccess -> AmbiguousName LSQRB Expression RSQRB','ArrayAccess',4,'p_ArrayAccess','parser.py',730),
  ('AmbiguousName -> ID','AmbiguousName',1,'p_AmbiguousName','parser.py',735),
  ('AmbiguousName -> AmbiguousName DOT ID','AmbiguousName',3,'p_AmbiguousName','parser.py',736),
  ('Literal -> IntegerLiteral','Literal',1,'p_Literal','parser.py',744),
  ('Literal -> FloatingPointLiteral','Literal',1,'p_Literal','parser.py',745),
  ('Literal -> BooleanLiteral','Literal',1,'p_Literal','parser.py',746),
  ('Literal -> CharacterLiteral','Literal',1,'p_Literal','parser.py',747),
  ('Literal -> StringLiteral','Literal',1,'p_Literal','parser.py',748),
  ('Literal -> NullLiteral','Literal',1,'p_Literal','parser.py',749),
  ('BooleanLiteral -> BOOL','BooleanLiteral',1,'p_BooleanLiteral','parser.py',755),
  ('IntegerLiteral -> INT','IntegerLiteral',1,'p_IntegerLiteral','parser.py',759),
  ('FloatingPointLiteral -> FLOAT','FloatingPointLiteral',1,'p_FloatingPointLiteral','parser.py',763),
  ('CharacterLiteral -> CHAR','CharacterLiteral',1,'p_CharacterLiteral','parser.py',767),
  ('StringLiteral -> STRING','StringLiteral',1,'p_StringLiteral','parser.py',771),
  ('NullLiteral -> R_NULL','NullLiteral',1,'p_NullLiteral','parser.py',777),
  ('EndStatement -> SEMICOLON','EndStatement',1,'p_EndStatement','parser.py',782),
  ('EndStatement -> LINEFEED','EndStatement',1,'p_EndStatement','parser.py',783),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',787),
]
