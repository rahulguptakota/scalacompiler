section .data
message db "Register = %d", 10, 0
formatin: db "%d", 0

section .text
	global main
extern printf
extern scanf

main:
call func_1_main
mov  eax, 1
int  0x80

func_1_fibo:
push ebp
mov ebp, esp
<<<<<<< HEAD
sub esp, 56
mov edx, 0
lea eax,[-4 + ebp]
add eax,0
mov eax, 0
lea ebx,[-4 + ebp]
add ebx,0
mov ebx, [ebx]
mov ecx, ebx
push ecx
=======
sub esp, 4060
mov edx, 0
lea eax,[-4 + ebp]
sub eax,0
mov ebx,0
mov [eax],ebx
lea ebx,[-4 + ebp]
sub ebx,4
mov ecx,1
mov [ebx],ecx
mov edx, 2
mov [-4008 + ebp], eax
mov [-4012 + ebp], ebx
mov [-4004 + ebp], edx

t34:
mov eax,[8 + ebp]
mov ebx,[-4004 + ebp]
cmp ebx,eax
mov [8 + ebp], eax
mov [-4004 + ebp], ebx
jg t36
mov ebx,4
mov eax,[-4004 + ebp]
imul ebx
lea ebx,[-4 + ebp]
sub ebx,eax
mov edx, [-4004 + ebp]
sub edx, 1
mov [-4020 + ebp], ebx
mov ebx,4
mov [-4016 + ebp], eax
mov eax,edx
imul ebx
lea ebx,[-4 + ebp]
sub ebx,eax
mov ebx, [ebx]
mov ecx, [-4004 + ebp]
sub ecx, 2
mov [-4032 + ebp], ebx
mov ebx,4
mov [-4028 + ebp], eax
mov eax,ecx
imul ebx
lea ebx,[-4 + ebp]
sub ebx,eax
mov ebx, [ebx]
mov [-4024 + ebp], edx
mov edx, [-4032 + ebp]
add edx, ebx
mov [-4036 + ebp], ecx
mov ecx,[-4020 + ebp]
mov [ecx],edx
mov [-4040 + ebp], eax
mov [-4044 + ebp], ebx
mov [-4048 + ebp], edx

t35:
mov edx, [-4004 + ebp]
add edx, 1
mov [-4004 + ebp], edx
jmp t34

t36:
mov ebx,4
mov eax,[8 + ebp]
imul ebx
lea ebx,[-4 + ebp]
sub ebx,eax
mov ebx, [ebx]
mov edx, ebx
mov [-4052 + ebp], eax
mov [-4056 + ebp], ebx
mov [-4060 + ebp], edx
mov eax, [-4060 + ebp]
mov esp, ebp
pop ebp
ret
>>>>>>> dc6cae0095493b4efd004046162fedbec20a0ffa
mov esp, ebp
pop ebp
ret

func_1_main:
push ebp
mov ebp, esp
sub esp, 8
mov edx, 0
push eax
mov eax, esp
push eax
push formatin
call scanf
add esp, 8
mov edx, [esp]
pop eax
push edx
mov [-4 + ebp], edx
call func_1_fibo
mov edx, eax
push eax
push ebx
push ecx
push edx

xor eax, eax
mov eax, edx
push eax
push message
call printf
add esp, 8
pop edx
pop ecx
pop ebx
pop eax

mov [-8 + ebp], eax
mov [-4 + ebp], edx
mov esp, ebp
pop ebp
ret
