section .data

 tempbuffer db '          '
section .text
	global _start

_start:
call func_1_main
mov  eax, 1
int  0x80

func_1_main:
push ebp
mov ebp, esp
sub esp, -32
mov edx, 9
mov ecx, 3
mov ebx, 0
mov eax, edx
add eax, ecx
mov [-8 + ebp], edx
mov edx, eax
push eax
xor eax, eax
mov eax, edx
add eax, '0'
mov edx, 1
push eax
mov ecx, esp
mov ebx, 1
mov eax,4
int 0x80
pop eax
pop eax
mov [-20 + ebp], eax
mov [-16 + ebp], ebx
mov [-12 + ebp], ecx
mov [-24 + ebp], edx
mov esp, ebp
pop ebp
ret
int_to_string:
add esi,9
mov byte [esi],0
mov ebx,10
.next_digit:
xor edx,edx
div ebx
add dl,'0'
dec esi
  mov [esi],dl
test eax,eax
jnz .next_digit
mov eax,esi
ret
