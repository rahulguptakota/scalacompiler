section .data
message db "Register = %d", 10, 0
formatin: db "%d", 0
formatout: db "%d ", 0
formatdouble: db "%lf", 0
<<<<<<< HEAD
=======

str22 db 'Double quote (\") is escaped',0
len_str22 equ $ - str22
>>>>>>> 5d6241f1d64d66d91878ae45ef39a525609ff57b
f2 TIMES 0 DW  0
f3 TIMES {'1': 8, '0': 0, '3': 8, '2': 8, '5': 8, '4': 8, '7': 8, '6': 8, '9': 8, '8': 8} DW  0

section .text
	global main
extern printf
extern scanf
extern fopen
extern fscanf
extern fprintf
extern fclose

main:
call func_1_main
mov  eax, 1
int  0x80

func_1_t:
push ebp
mov ebp, esp
sub esp, 0
push eax
push ebx
push ecx
push edx

xor eax, eax
push eax
push ebx
push ecx
push edx

xor eax, eax
mov eax, [12 + ebp]
push eax
push message
call printf
add esp, 8
pop edx
pop ecx
pop ebx
pop eax

mov esp, ebp
pop ebp
ret

func_1_main:
push ebp
mov ebp, esp
sub esp, 64
lea eax, [-44 + ebp]
lea eax, [-44 + ebp]
sub eax, 0
mov ebx, 1
mov [eax],ebx
lea eax, [-44 + ebp]
lea eax, [-44 + ebp]
sub eax, 4
mov ebx, 2
mov [eax],ebx
lea eax, [-44 + ebp]
lea eax, [-44 + ebp]
sub eax, 8
mov ebx, 3
mov [eax],ebx
mov eax, f3
add eax, 0
mov ebx, 2
mov [eax],ebx
mov eax, f3
add eax, 4
mov ebx, 3
mov [eax],ebx
lea eax, [-44 + ebp]
lea eax, [-44 + ebp]
sub eax, 8
mov ebx, 4
mov [eax],ebx
lea eax,[-44 + ebp]
sub eax,8
mov eax, [eax]
mov [-60 + ebp], eax
push eax
push ebx
push ecx
push edx

xor eax, eax
push eax
push ebx
push ecx
push edx

xor eax, eax
mov eax, [-60 + ebp]
push eax
push message
call printf
add esp, 8
pop edx
pop ecx
pop ebx
pop eax

mov edx, 55
<<<<<<< HEAD
=======
push eax
push ebx
push ecx
push edx
mov edx,len_str22
mov ecx,str22
mov ebx,1
mov eax,4
int 0x80
pop edx
pop ecx
pop ebx
pop eax
>>>>>>> 5d6241f1d64d66d91878ae45ef39a525609ff57b
push 0
mov  eax, 10
push eax
mov [-64 + ebp], edx
call func_1_t
mov esp, ebp
pop ebp
ret
